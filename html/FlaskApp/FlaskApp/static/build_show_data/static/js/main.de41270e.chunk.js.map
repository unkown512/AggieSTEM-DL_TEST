{"version":3,"sources":["PdfPlugin.js","utils.js","ImgPlugin.js","TablePlugin.js","TxtPlugin.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["PdfPlugin","props","onDocumentLoadSuccess","numPages","setState","state","undefined","pageNumber","pdfjs","GlobalWorkerOptions","workerSrc","version","currentPageNumber","this","targetPage","parseInt","pageNumInput","value","pdfFile","sourcePath","jumpBar","className","type","ref","onClick","changePage","leftSwitch","changeToPrevPage","rightSwitch","changeToNextPage","file","onLoadSuccess","React","Component","ImgPlugin","source","Object","prototype","toString","call","length","ZmageSrc","ZmageSet","item","push","src","alt","set","zIndex","backdrop","renderStrategySet","linable","text","colorTags","tags","map","tag","color","key","toUpperCase","inviteAndDelete","record","style","marginRight","name","TablePlugin","dataSource","columns","fetch","then","res","split","isColumns","dataSourceD","columnsD","trim","match","columnName","rowData","elementCount","rowElement","column","render","renderStrategy","width","TxtPlugin","id","height","App","userName","datasetName","data","jsonData","filePost","browserHistory","getCurrentLocation","pathname","axios","post","headers","withCredentials","json","username","handleTable","handlePdf","handleImg","handleCsv","handleTxt","msg","catch","error","console","log","mainPlugin","href","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.de41270e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './PdfPlugin.css';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\r\nimport { sourcePathPref } from './utils.js'\r\n\r\nclass PdfPlugin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            numPages: undefined,\r\n            pageNumber: 1\r\n        }\r\n        pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n    }\r\n\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n    }\r\n\r\n    changeToPrevPage() {\r\n        let currentPageNumber = this.state.pageNumber;\r\n        this.setState({ pageNumber: currentPageNumber - 1 });\r\n    }\r\n\r\n    changeToNextPage() {\r\n        let currentPageNumber = this.state.pageNumber;\r\n        this.setState({ pageNumber: currentPageNumber + 1 });\r\n    }\r\n\r\n    changePage() {\r\n        let targetPage = parseInt(this.pageNumInput.value);\r\n        if (targetPage > 0 && targetPage <= this.state.numPages) {\r\n            this.setState({ pageNumber: targetPage });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let pdfFile = sourcePathPref + this.props.sourcePath;\r\n        let jumpBar = this.state.numPages !== undefined\r\n            ? <div className=\"jumpBar\">\r\n                Page:\r\n                <input className=\"jumpBarInput text-center\" type=\"text\"\r\n                    ref={(pageNumInput) => { this.pageNumInput = pageNumInput }} />&#91;1-{this.state.numPages}&#93;\r\n                <span className=\"jumpBarGo unselectable cursorpointer\" onClick={() => this.changePage()} >Go</span>\r\n            </div>\r\n            : undefined;\r\n        let leftSwitch = (this.state.numPages !== undefined && this.state.pageNumber > 1)\r\n            ? <div className=\"pdfViewerSwitcher unselectable cursorpointer pdfViewerSwitcherLeft\"\r\n                onClick={() => this.changeToPrevPage()} > Prev</div>\r\n            : undefined;\r\n        let rightSwitch = (this.state.numPages !== undefined && this.state.pageNumber < this.state.numPages)\r\n            ? <div className=\"pdfViewerSwitcher unselectable cursorpointer pdfViewerSwitcherRight\"\r\n                onClick={() => this.changeToNextPage()}>Next</div>\r\n            : undefined;\r\n\r\n        return (\r\n            <div className=\"columnListWrapper\">\r\n                {jumpBar}\r\n                <Document className=\"pdfViewer\" file={pdfFile} onLoadSuccess={this.onDocumentLoadSuccess}>\r\n                    <Page pageNumber={this.state.pageNumber} />\r\n                </Document>\r\n                {leftSwitch}\r\n                {rightSwitch}\r\n                <p>Page {this.state.pageNumber} of {this.state.numPages}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { PdfPlugin }","export const sourcePathPref = '../';\r\n","import React from 'react';\r\nimport Zmage from 'react-zmage'\r\nimport { sourcePathPref } from './utils.js'\r\n\r\nclass ImgPlugin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            numPages: undefined,\r\n            pageNumber: 1\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.source === undefined\r\n            || Object.prototype.toString.call(this.props.source) !== \"[object Array]\"\r\n            || this.props.source.length === 0) {\r\n            return (null);\r\n        }\r\n\r\n        let ZmageSrc = sourcePathPref + this.props.source[0];\r\n        let ZmageSet = undefined;\r\n        if (this.props.source.length > 1) {\r\n            ZmageSet = [];\r\n            for (let item of this.props.source) {\r\n                ZmageSet.push({ src: sourcePathPref + item, alt: item });\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"columnListWrapper\">\r\n                <p>Click to view all images.</p>\r\n                <Zmage src={ZmageSrc} alt=\"Image\" set={ZmageSet} zIndex={1030}\r\n                    backdrop=\"linear-gradient(90deg, transparent 0%, lightgrey 100%)\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { ImgPlugin }","import React from 'react';\r\nimport { Table, Tag } from 'antd';\r\nimport { sourcePathPref } from './utils.js'\r\n\r\nconst renderStrategySet = {\r\n    linable: text => <a>{text}</a>,\r\n    colorTags: tags => (\r\n        <span>\r\n            {tags.map(tag => {\r\n                let color = tag.length > 5 ? 'geekblue' : 'green';\r\n                if (tag === 'loser') {\r\n                    color = 'volcano';\r\n                }\r\n                return (\r\n                    <Tag color={color} key={tag}>\r\n                        {tag.toUpperCase()}\r\n                    </Tag>\r\n                );\r\n            })}\r\n        </span>\r\n    ),\r\n    inviteAndDelete: (text, record) => (\r\n        <span>\r\n            <a style={{ marginRight: 16 }}>Invite {record.name}</a>\r\n            <a>Delete</a>\r\n        </span>\r\n    )\r\n};\r\n\r\n\r\nclass TablePlugin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataSource: undefined,\r\n            columns: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.type === 'csv') {\r\n            fetch(sourcePathPref + this.props.sourcePath)\r\n                .then(res => res.text())\r\n                .then(text => {\r\n                    text = text.split(/\\n/);\r\n                    let isColumns = true, dataSourceD = [], columnsD = [];\r\n                    for (let item of text) {\r\n                        if (item.length === 0) { continue; }\r\n                        item = item.trim().match(/(\"[^\"]+\"|[^,]+)/g);\r\n                        if (isColumns === true) {\r\n                            for (let columnName of item) {\r\n                                columnsD.push({\r\n                                    'title': columnName,\r\n                                    'dataIndex': columnName,\r\n                                    'key': columnName,\r\n                                });\r\n                            }\r\n                            isColumns = false;\r\n                        } else {\r\n                            let rowData = {}, elementCount = 0;\r\n                            for (let rowElement of item) {\r\n                                if (elementCount === columnsD.length) { break; }\r\n                                rowData[columnsD[elementCount]['key']] = rowElement;\r\n                                elementCount++;\r\n                            }\r\n                            dataSourceD.push(rowData);\r\n                        }\r\n                    }\r\n                    this.setState({ dataSource: dataSourceD, columns: columnsD })\r\n                });\r\n        } else if (this.props.type === 'table') {\r\n            let columnsD = this.props.columns;\r\n            for (let column of columnsD) {\r\n                column.render = renderStrategySet[column.renderStrategy];\r\n            }\r\n            this.setState({ dataSource: this.props.dataSource, columns: columnsD })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"columnListWrapper\">\r\n                <Table style={{ width: \"100%\" }} dataSource={this.state.dataSource} columns={this.state.columns} />;\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { TablePlugin }","import React from 'react';\r\nimport { sourcePathPref } from './utils.js'\r\n\r\nclass TxtPlugin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"columnListWrapper\">\r\n                <iframe name=\"frmMain\" src={sourcePathPref + this.props.sourcePath} id=\"frmMain\" width=\"100%\" height=\"600px\" ></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { TxtPlugin }","import React from 'react';\nimport './App.css';\nimport { browserHistory } from 'react-router';\nimport { PdfPlugin } from './PdfPlugin.js';\nimport { ImgPlugin } from './ImgPlugin.js'\nimport { TablePlugin } from './TablePlugin.js'\nimport { TxtPlugin } from './TxtPlugin.js'\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      datasetName: '',\n      type: '',\n      columns: undefined,\n      data: undefined,\n      sourcePath: undefined\n    }\n  }\n\n  handleTable(jsonData) {\n    if (jsonData.columns && jsonData.data) {\n      this.setState({ type: 'table', columns: jsonData.columns, data: jsonData.data });\n    }\n  }\n\n  handlePdf(jsonData) {\n    if (jsonData.source) {\n      this.setState({ type: 'pdf', sourcePath: jsonData.source });\n    }\n  }\n\n  handleImg(jsonData) {\n    if (jsonData.source) {\n      this.setState({ type: 'img', sourcePath: jsonData.source });\n    }\n  }\n\n  handleCsv(jsonData) {\n    if (jsonData.source) {\n      this.setState({ type: 'csv', sourcePath: jsonData.source });\n    }\n  }\n\n  handleTxt(jsonData) {\n    if (jsonData.source) {\n      this.setState({ type: 'txt', sourcePath: jsonData.source });\n    }\n  }\n\n  componentDidMount() {\n    let filePost = browserHistory.getCurrentLocation().pathname;\n    filePost = filePost.split('/')[filePost.split('/').length - 1];\n    axios.post('post', {\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Access-Control-Allow-Origin': '*',\n        'Accept': 'application/json',\n      },\n      withCredentials: false,\n      \"fileName\": filePost\n    }).then((res) => {\n      let json = res.data;\n      this.setState({ userName: json.username, datasetName: json.datasetName });\n      if (json.type === 'table') {\n        this.handleTable(json);\n      } else if (json.type === 'pdf') {\n        this.handlePdf(json);\n      } else if (json.type === 'img') {\n        this.handleImg(json);\n      } else if (json.type === 'csv') {\n        this.handleCsv(json);\n      } else if (json.type === 'txt') {\n        this.handleTxt(json);\n      } else if (json.type === 'error' && json.msg) {\n        this.setState({ type: 'error', data: json.msg });\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    let mainPlugin = undefined;\n    if (this.state.type === 'pdf') {\n      mainPlugin = <PdfPlugin sourcePath={this.state.sourcePath} />;\n    } else if (this.state.type === 'img') {\n      mainPlugin = <ImgPlugin source={this.state.sourcePath} />;\n    } else if (this.state.type === 'csv') {\n      mainPlugin = <TablePlugin type='csv' sourcePath={this.state.sourcePath} />;\n    } else if (this.state.type === 'table') {\n      mainPlugin = <TablePlugin type='table' columns={this.state.columns} dataSource={this.state.data} />;\n    } else if (this.state.type === 'txt') {\n      mainPlugin = <TxtPlugin sourcePath={this.state.sourcePath} />;\n    } else if (this.state.type === 'error') {\n      mainPlugin = <div><p className=\"text-center\">{this.state.data}</p></div>\n    }\n\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar\" id=\"mainNav\">\n          <div className=\"nav-container\">\n            <a className=\"navbar-brand\" href={\"../dashboard\"}>Aggie STEM</a>\n            <div className=\"navbar-collapse\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\" id=\"login\" name=\"login\">\n                  <a className=\"nav-link\" href={\"../user_profile\"}>{this.state.userName}</a>\n                </li>\n                <li className=\"nav-item\" id=\"logout\" name=\"logout\">\n                  <a className=\"nav-link\" href={\"../logout\"}>Logout</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"mainBody\">\n          <h1 className=\"datasetName\">Current Dataset: {this.state.datasetName}</h1>\n          {mainPlugin}\n        </div>\n\n        <footer className=\"py-5 bg-dark\">\n          <div className=\"container\">\n            <p className=\"m-4 text-center text-dark\">Copyright &copy; AggieSTEM 2019</p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 88;"],"sourceRoot":""}